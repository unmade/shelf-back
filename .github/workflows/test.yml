name: Test

on:
    push:
      branches:
        - master
      tags:
        - '[0-2].[0-9]+.[0-9]+*'
    pull_request:
      branches:
        - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      gel:
        image: geldata/gel:6.9
        env:
          GEL_SERVER_USER: gel
          GEL_SERVER_PASSWORD: root
          GEL_SERVER_TLS_KEY: ${{ secrets.GEL_SERVER_TLS_KEY }}
          GEL_SERVER_TLS_CERT: ${{ secrets.GEL_SERVER_TLS_CERT }}
        ports:
        - 5656:5656
        options: >-
          --health-cmd="
            echo \"${GEL_SERVER_PASSWORD}\" | gel query \
              --dsn gel://${GEL_SERVER_USER}@localhost:5656/main \
              --password-from-stdin \
              --tls-security=insecure \
              'SELECT 1;'
          "
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Setup minio
      env:
        MINIO_ROOT_USER: ${{ secrets.S3_ACCESS_KEY_ID }}
        MINIO_ROOT_PASSWORD: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      run: |
        docker run -d -p 9000:9000 --name minio \
          -e "MINIO_ACCESS_KEY=$MINIO_ROOT_USER" \
          -e "MINIO_SECRET_KEY=$MINIO_ROOT_PASSWORD" \
          -v /tmp/data:/data \
          -v /tmp/config:/root/.minio \
          minio/minio server /data

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version-file: ".python-version"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.2"
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --locked --no-default-groups --group test

    - name: Run Tests
      env:
        PYTHONPATH: .
        AUTH__SECRET_KEY: github_actions
        DATABASE__DSN: "gel://gel:root@localhost:5656/main"
        DATABASE__GEL_TLS_CA_FILE: "./certs/edbtlscert.dev.pem"
        STORAGE__TYPE: "filesystem"
        STORAGE__FS_LOCATION: "./data"
        STORAGE__S3_LOCATION: "http://localhost:9000"
        STORAGE__S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
        STORAGE__S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
        STORAGE__S3_REGION_NAME: "us-east-1"
        WORKER__BROKER_DSN: "redis://localhost:6379"
      run: |
        uv run pytest --cov --cov-report=xml

    - name: Send coverage report
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

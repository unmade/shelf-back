name: Test

on:
  push:
    branches:
      - master
    tags:
      - '[0-2].[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/test.yml'
      - 'app/**'
      - 'dbschema/**'
      - 'tests/**'
      - '.python-version'
      - 'gel.toml'
      - 'manage.py'
      - 'pyproject.toml'
      - 'pytest.ini'
      - 'uv.lock'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopassword

    services:
      gel:
        image: geldata/gel:6.9
        env:
          GEL_SERVER_SECURITY: insecure_dev_mode
        ports:
          - 5656:5656

      redis:
        image: redis
        ports:
        - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v5

    - name: Set up Gel
      uses: geldata/setup-gel@v1
      with:
        server-dsn: gel://localhost:5656

    - name: Setup minio
      run: |
        docker run -d -p 9000:9000 --name minio \
          -e "MINIO_ROOT_USER=$MINIO_ROOT_USER" \
          -e "MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD" \
          -v /tmp/data:/data \
          minio/minio:RELEASE.2025-07-23T15-54-02Z@sha256:f6efb212cad3b62f78ca02339f16d8bc28d5bb2fbe792dfc21225c6037d2af8b server /data

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: ".python-version"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.3"
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --locked --no-default-groups --group test

    - name: Run Tests
      env:
        PYTHONPATH: .
        AUTH__SECRET_KEY: github_actions
        DATABASE__DSN: "gel://localhost:5656/main"
        STORAGE__TYPE: "filesystem"
        STORAGE__FS_LOCATION: "./data"
        STORAGE__S3_LOCATION: "http://localhost:9000"
        STORAGE__S3_ACCESS_KEY_ID: ${{ env.MINIO_ROOT_USER }}
        STORAGE__S3_SECRET_ACCESS_KEY: ${{ env.MINIO_ROOT_PASSWORD }}
        STORAGE__S3_REGION_NAME: "us-east-1"
        WORKER__BROKER_DSN: "redis://localhost:6379"
      run: |
        uv run pytest --cov --cov-report=xml

    - name: Send coverage report
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true
        verbose: true

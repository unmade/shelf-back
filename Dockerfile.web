FROM python:3.10-slim-buster

ARG edgedb_version
ARG subdist

ENV GOSU_VERSION 1.11

SHELL ["/bin/bash", "-c"]

# install edgedb-server
RUN set -Eeo pipefail; shopt -s dotglob inherit_errexit nullglob; \
export DEBIAN_FRONTEND=noninteractive; \
(test -n "${edgedb_version}" || \
  (echo ">>> ERROR: missing required 'edgedb_version' build-arg" >&2 && exit 1)) \
&& ( \
    for i in $(seq 1 5); do [ $i -gt 1 ] && sleep 1; \
        apt-get update \
    && s=0 && break || s=$?; done; exit $s \
) \
&& ( \
    for i in $(seq 1 5); do [ $i -gt 1 ] && sleep 1; \
        apt-get install -y --no-install-recommends \
            apt-utils \
            gnupg \
            dirmngr \
            curl \
            wget ca-certificates \
            apt-transport-https \
            locales \
            procps \
            gosu \
            jq \
    && s=0 && break || s=$?; done; exit $s \
) \
&& localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\
&& curl -fsSL https://packages.edgedb.com/keys/edgedb.asc \
       -o /etc/apt/trusted.gpg.d/edgedb.asc \
&& echo deb https://packages.edgedb.com/apt buster ${subdist:-main} \
       >/etc/apt/sources.list.d/edgedb.list \
&& ( \
    for i in $(seq 1 5); do [ $i -gt 1 ] && sleep 1; \
        apt-get update \
    && s=0 && break || s=$?; done; exit $s \
) \
&& ( \
    server=edgedb-server-${edgedb_version}; \
    for i in $(seq 1 5); do [ $i -gt 1 ] && sleep 1; \
        env apt-get install -y ${server} edgedb-cli \
    && s=0 && break || s=$?; done; exit $s \
) \
&& ln -s /usr/bin/edgedb-server-${edgedb_version} /usr/bin/edgedb-server \
&& apt-get remove -y apt-utils gnupg dirmngr wget curl apt-transport-https \
&& apt-get purge -y --auto-remove \
&& rm -rf /var/lib/apt/lists/*

ENV LANG en_US.utf8
ENV EDGEDB_VERSION ${edgedb_version}

COPY ./requirements/base.txt /requirements/

RUN pip install --upgrade pip && pip install --no-cache-dir -r requirements/base.txt

ARG app_version
ENV APP_VERSION=$app_version

ENV HOME_DIR /usr/src/shelf-back
ENV PYTHONPATH=${HOME_DIR}

COPY ./.heroku/start-edgedb /usr/local/bin/
COPY ./.heroku/web-docker-entrypoint.sh ${HOME_DIR}/docker-entrypoint.sh
RUN chmod +x ${HOME_DIR}/docker-entrypoint.sh

COPY ./dbschema ${HOME_DIR}/dbschema
COPY ./gunicorn_conf.py ${HOME_DIR}/gunicorn_conf.py
COPY ./LICENSE ${HOME_DIR}}/LICENSE
COPY ./manage.py ${HOME_DIR}/manage.py

COPY ./app ${HOME_DIR}/app
WORKDIR ${HOME_DIR}

# dyno container has no persistent storage,
# so create a default path for 'admin' superuser
RUN mkdir -p /usr/src/shelf-data/admin/Trash

EXPOSE 80

ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "-c", "gunicorn_conf.py", "app.main:app"]
